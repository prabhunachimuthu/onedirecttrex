@using Microsoft.AspNetCore.Mvc
@using Microsoft.AspNetCore.Http
@using OneDirect.Helper
@using OneDirect.Models
@using OneDirect.ViewModels
@using Newtonsoft.Json
@{

}
<style type="text/css">
    #calendar1 {
        /*background-color: #A0A8A0;*/
    }

    .mask2 {
        background-color: #000;
        display: block;
        height: 100%;
        left: 0;
        opacity: .8;
        position: fixed;
        top: 0;
        width: 100%;
        z-index: 1000;
    }
    /*.fc-time-grid-container
    {
        height:510px;
    }*/
</style>
<section class="content-header">


    <h1>
        <span>@Context.Session.GetString("UserName") Appointments</span>
    </h1>


    <ol class="breadcrumb">
        <li><a href="#"><i class="fa fa-dashboard"></i> Home</a></li>
        <li class="active">Appointments</li>
    </ol>
</section>
<div class="row">
    <div class="col-md-12">
        <div class="box box-default with-border">
            <div class="box-header with-border">
                @if (Context.Session.GetString("UserType") == "0")
                {
                    <div class="col-md-4">
                        <div class="radio">


                            <label>
                                <input type="radio" id="forward" name="forward" data-actionurl="@Url.Action("Index", "Appointments", new { id = "History", patId = ViewBag.PatId })" @(ViewBag.page == "History" ? "checked" : "") />
                                History

                            </label>


                        </div>
                    </div>
                }
                else
                {
                    <div class="col-md-4">
                        <div class="radio">

                            <label>
                                <input type="radio" id="forward" name="forward" data-actionurl="@Url.Action("Index", "Appointments", new { id = "Calendar" })" @(ViewBag.page == "Calendar" ? "checked" : "") />
                                Appointment Calendar

                            </label>

                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="radio">

                            <label>
                                <input type="radio" id="forward" name="forward" data-actionurl="@Url.Action("Index", "Appointments", new { id = "Availability" })" @(ViewBag.page == "Availability" ? "checked" : "") />
                                Generally Available on these days
                            </label>

                        </div>
                    </div>

                    <div class="col-md-4">
                        <div class="radio">

                            <label>
                                <input type="radio" id="forward" name="forward" data-actionurl="@Url.Action("Index", "Appointments", new { id = "History" })" @(ViewBag.page == "History" ? "checked" : "") />
                                History

                            </label>



                        </div>
                    </div>
                }
            </div>
        </div>
    </div>

</div>

<!-- Main content -->
<!-- Main content -->
<section class="content">
    <div class="row">

        <!-- /.col -->
        <div class="col-md-12">
            <div class="box box-primary">

                @if (ViewBag.appointment != null || ViewBag.Page == "Calendar")
                {
                    <div class="box-header">
                        <div class="col-md-12" style="padding-bottom:10px;">
                            <div class="col-md-3" id="romflexion">
                                <button type="button" class="btn btn-default btn-sm active">
                                    <i class="fa fa-square text-green"></i>
                                </button>&nbsp;Available
                            </div>
                            <div class="col-md-3" id="romflexion">
                                <button type="button" class="btn btn-default btn-sm active">
                                    <i class="fa fa-square text-blue"></i>
                                </button>&nbsp;Booked
                            </div>
                            <div class="col-md-3" id="romflexion">
                                <button type="button" class="btn btn-default btn-sm active">
                                    <i class="fa fa-square text-red"></i>
                                </button>&nbsp;Ready to Start
                            </div>
                            <div class="col-md-3" id="romflexion">
                                <button type="button" class="btn btn-default btn-sm active">
                                    <i class="fa fa-square text-gray"></i>
                                </button>&nbsp;Blocked
                            </div>
                        </div>
                    </div>
                }
                else if (ViewBag.availability != null || ViewBag.Page == "Availability")
                {
                    <div class="box-header">
                        <div class="col-md-12" style="padding-bottom:10px;">
                            <div class="col-md-3" id="romflexion">
                                <button type="button" class="btn btn-default btn-sm active">
                                    <i class="fa fa-square text-green"></i>
                                </button>&nbsp;Available
                            </div>

                            <div class="col-md-3" id="romflexion">
                                <button type="button" class="btn btn-default btn-sm active">
                                    <i class="fa fa-square text-gray"></i>
                                </button>&nbsp;Not Available
                            </div>
                        </div>
                    </div>
                }

                <div class="box-body no-padding">
                    @if (ViewBag.availability != null || ViewBag.Page == "Availability")
                    {
                    <!-- THE CALENDAR -->
                        <div id="calendar1"></div>
                    }
                    else if (ViewBag.appointment != null || ViewBag.Page == "Calendar")
                    {

                        <div id="calendar"></div>
                    }
                    else if (ViewBag.history != null)
                    {
                        <div class="col-md-12" style="padding-bottom:10px;padding-top:10px;">
                            <div class="dropdown pull-right">
                                <button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown">
                                    @ViewBag.SelectedPatient
                                    <span class="caret"></span>
                                </button>
                                <ul class="dropdown-menu">
                                    @foreach (Patient p in ViewBag.Patients)
                                    {
                                        <li><a href="@Url.Action("Index","Appointments",new {@id="History", @patId=p.PatientId})">@p.PatientName</a></li>
                                    }
                                    <li><a href="@Url.Action("Index","Appointments",new { @id = "History" })">All</a></li>
                                </ul>
                            </div>

                        </div>
                        <div id="example1_wrapper" class="dataTables_wrapper form-inline dt-bootstrap">
                            <div class="row">
                                <div class="col-sm-12">
                                    <table id="example1" class="table table-bordered table-striped dataTable" style="font-size:small" role="grid" aria-describedby="example1_info">
                                        <thead>
                                            <tr role="row">
                                                <th class="sorting_asc" tabindex="0" aria-controls="example1" rowspan="1" colspan="1" aria-sort="ascending" aria-label="Patient Name: activate to sort column descending" style="width: 182px;">Patient Name</th>
                                                <th class="sorting_asc" tabindex="0" aria-controls="example1" rowspan="1" colspan="1" aria-sort="ascending" aria-label="Phone: activate to sort column descending" style="width: 182px;">Doctor Name</th>
                                                <th class="sorting_asc" tabindex="0" aria-controls="example1" rowspan="1" colspan="1" aria-sort="ascending" aria-label="Phone: activate to sort column descending" style="width: 182px;">Appointment Time </th>
                                                <th class="sorting_asc" tabindex="0" aria-controls="example1" rowspan="1" colspan="1" aria-sort="ascending" aria-label="Phone: activate to sort column descending" style="width: 182px;">Status</th>
                                                <th class="sorting_asc" tabindex="0" aria-controls="example1" rowspan="1" colspan="1" aria-sort="ascending" aria-label="Phone: activate to sort column descending" style="width: 182px;">Actions</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @if (ViewBag.History != null)
                                            {
                                                List<AppointmentScheduleListView> lview = (List<AppointmentScheduleListView>)ViewBag.History;
                                                var i = 0;
                                                @foreach (var item in lview.OrderBy(x => x.AppointmentDate))
                                                {
                                                    <tr>
                                                        <td>
                                                            @if (item.TotalSession > 0)
                                                            {
                                                                @*@if (Context.Session.GetString("UserType") != ConstantsVar.Admin.ToString())
                                                                    {
                                                                        @if (!string.IsNullOrEmpty(item.PatientVseeId))
                                                                        {
                                                                            @if (item.Status == "Open")
                                                                            {
                                                                                <div class='status-alert' style="float:left" username='@item.PatientVseeId'></div><span>
                                                                                    <a href="@Url.Action("Patient", "Provider", new { id = item.PatientRx.PatientId, Username = item.PatientName, EquipmentType = item.PatientRx.EquipmentType, actuator = item.PatientRx.DeviceConfiguration })">@item.PatientName</a>
                                                                                </span>
                                                                            }
                                                                            else
                                                                            {
                                                                                <a href="@Url.Action("Patient", "Provider", new { id = item.PatientRx.PatientId, Username = item.PatientName, EquipmentType = item.PatientRx.EquipmentType, actuator = item.PatientRx.DeviceConfiguration })">@item.PatientName</a>

                                                                            }
                                                                        }
                                                                        else
                                                                        {
                                                                            @item.PatientName
                                                                        }
                                                                    }
                                                                    else*@
                                                            {
                                                                <a href="@Url.Action("Patient", "Provider", new { id = item.PatientRx.PatientId, Username = item.PatientName, EquipmentType = item.PatientRx.EquipmentType, actuator = item.PatientRx.DeviceConfiguration })">@item.PatientName</a>

                                                                }
                                                            }
                                                            else
                                                            {
                                                                @item.PatientName

                                                            }

                                                        </td>
                                                        <td>@item.Provider.Name</td>
                                                        <td>@(Convert.ToDateTime(item.AppointmentDate).ToString("MM-dd-yyyy hh:mm tt")) - @(Convert.ToDateTime(item.AppointmentDate).AddHours(1).ToString("hh:mm tt"))</td>
                                                        <td>@(item.Status == "Open" ? "-" : item.Status)</td>
                                                        <td>@Html.ActionLink("Delete", "deleteappointment", new { appointmentid = item.AppointmentId }, new { @class = "label label-primary", onclick = "return confirm('Are you sure want to delete the appointment?')" })</td>
                                                    </tr>


                                                }
                                            }

                                        <tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    }
                </div>
                <!-- /.box-body -->
            </div>
            <!-- /. box -->
        </div>
        <!-- /.col -->
    </div>
    <!-- /.row -->
</section>
@if (ViewBag.availability != null)
{
    <div class="mask2" id="mask2" style="display:none"></div>
    <div id="divpopup2" class="col-md-6" style="border:1px solid white;display:none;position:fixed;top:25%;left:25%;z-index:300003">
        <section class="content-header">
            <span style="color:white" id="messageid"></span>
        </section>

        <div class="row">
            <div class="col-xs-12">
                <div class="box">
                    <!-- /.box-header -->
                    <div class="box-body">
                        <input type="hidden" id="hdday" value="" />
                        <input type="hidden" id="hdhour" value="" />
                        <input type="hidden" id="hdminute" value="" />
                        <input type="hidden" id="hdoffset" value="" />
                        <div id="example1_wrapper" class="dataTables_wrapper form-inline dt-bootstrap">
                            <div class="row">
                                <div class="col-sm-12">
                                    <table id="example1" class="table table-bordered table-striped dataTable" style="font-size:small" role="grid" aria-describedby="example1_info">
                                        @*<thead>
                                                <tr role="row">
                                                    <th class="sorting_asc" tabindex="0" aria-controls="example1" rowspan="1" colspan="1" aria-sort="ascending" aria-label="Patient Name: activate to sort column descending" style="width: 182px;">Name</th>
                                                    <th class="sorting_asc" tabindex="0" aria-controls="example1" rowspan="1" colspan="1" aria-sort="ascending" aria-label="Phone: activate to sort column descending" style="width: 182px;">Patient Name</th>
                                                    <th class="sorting_asc" tabindex="0" aria-controls="example1" rowspan="1" colspan="1" aria-sort="ascending" aria-label="Phone: activate to sort column descending" style="width: 182px;">Date</th>
                                                    <th class="sorting_asc" tabindex="0" aria-controls="example1" rowspan="1" colspan="1" aria-sort="ascending" aria-label="Phone: activate to sort column descending" style="width: 182px;">Status</th>
                                                </tr>
                                            </thead>
                                            <tbody>

                                            <tbody>*@
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="box-footer">
                        <div class="col-md-12">
                            <span id="messagebottom"></span>
                        </div>
                        <button type="button" id="btnYes" class="btn btn-success pull-right" onclick="deleteappointments();" style="margin-left:10px;">Yes</button>

                        <button type="button" id="btnNo" class="btn btn-default pull-right" onclick="$('#divpopup2').hide();$('#mask2').hide();window.location.reload();" style="margin-left:10px;">No</button>

                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-12">

        </div>
    </div>

}
<a href="" id="vseeurl" style="display:none"></a>

<script src="~/plugins/jQuery/jquery-2.2.3.min.js" type="text/javascript"></script>
@*<script type="text/javascript" src="https://cdn.pubnub.com/pubnub-3.5.48.min.js"></script>
    <script type="text/javascript" src="https://api.vsee.com/vseepresence/1.0.0/vseepresence.js"></script>*@
<script>

    $(function () {
        "use strict";

        var startslot=@Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject((Context.Session.GetString("UserType") =="1"? ConfigVars.NewInstance.slots.Support_StartTime : ConfigVars.NewInstance.slots.Therapist_StartTime)));
        var endslot=@Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject((Context.Session.GetString("UserType") =="1"? ConfigVars.NewInstance.slots.Support_EndTime : ConfigVars.NewInstance.slots.Therapist_EndTime)));
        //$("body").css("height",document.body.clientHeight+"px");
        //$("wrapper").css("height",document.body.clientHeight+"px");
        //$(".content-wrapper").css("min-height",document.body.clientHeight+"px");
        //$(window).resize(function() {
        //    //alert(document.body.clientHeight+"px");
        //    $(".content-wrapper").css("min-height",document.body.clientHeight+"px");
        //});

        $("input:radio[name='forward']").change(function(){

            window.location = $(this).attr("data-actionurl");
        });

        //refreshappointments();

        window.setInterval(function () {
            refreshappointments();


        }, 60000);



    });
    function getTimeZone() {
        //Local
        return /\((.*)\)/.exec(new Date().toString())[1];
        ////Heroku
        //var offset = new Date().getTimezoneOffset(), o = Math.abs(offset);
        //return "GMT" + (offset < 0 ? "+" : "-") + ("00" + Math.floor(o / 60)).slice(-2) + ":" + ("00" + (o % 60)).slice(-2);
    }
    function refreshappointments()
    {
        if(location.pathname.indexOf("Calendar") >0)
        {
            //showMask();
            $.ajax({
                url: '@Url.Action("refresh","appointments")',
                //data: JSON.stringify(messages),
                type: 'post',
                dataType: 'json',
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    if(data!=null)
                    {
                        console.log(data);
                        if(data.result =="success" && data.appointmentlist !=null)
                        {
                            //$('#calendar').fullCalendar( 'removeEventSource', data.appointmentlist);
                            $('#calendar').fullCalendar( 'removeEvents');
                            $('#calendar').fullCalendar( 'addEventSource', data.appointmentlist);
                            $('#calendar').fullCalendar( 'refetchEvents' );
                            hideMask();
                        }
                    }
                },
                error: function (data) {
                    //console.log(data);
                }
            });
        }

    }
    function deleteappointments()
    {
        //Half-Hour slot : url: '@Url.Action("delete","appointments")'+"?day="+ $("#hdday").val()+"&hour="+ $("#hdhour").val()+"&minute="+ $("#hdminute").val()+"&timezoneoffset="+encodeURIComponent(getTimeZone()),
        showMask();
        $.ajax({
            url: '@Url.Action("delete","appointments")'+"?day="+ $("#hdday").val()+"&hour="+ $("#hdhour").val()+"&timezoneoffset="+encodeURIComponent(getTimeZone()),
            //data: JSON.stringify(messages),
            type: 'post',
            dataType: 'json',
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                if(data!=null)
                {
                    console.log(data);
                    if(data.result !="" )
                    {
                        window.location.reload();
                    }
                }
            },
            error: function (data) {
                //console.log(data);
            }
        });


    }

    $(function () {
        var startslot=@Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject((Context.Session.GetString("UserType") =="1"? ConfigVars.NewInstance.slots.Support_StartTime : ConfigVars.NewInstance.slots.Therapist_StartTime)));
        var endslot=@Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject((Context.Session.GetString("UserType") =="1"? ConfigVars.NewInstance.slots.Support_EndTime : ConfigVars.NewInstance.slots.Therapist_EndTime)));
        var availability=@Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.availability));
        var appointment=@Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.appointment));
        /* initialize the external events
         -----------------------------------------------------------------*/
        //function init_events(ele) {
        //    ele.each(function () {

        //        // create an Event Object (http://arshaw.com/fullcalendar/docs/event_data/Event_Object/)
        //        // it doesn't need to have a start or end
        //        var eventObject = {
        //            title: $.trim($(this).text()) // use the element's text as the event title
        //        }

        //        // store the Event Object in the DOM element so we can get to it later
        //        $(this).data('eventObject', eventObject)



        //    })
        //}

        //init_events($('#external-events div.external-event'))

        /* initialize the calendar
         -----------------------------------------------------------------*/
        //Date for the calendar events (dummy data)
        var d=new Date();
        if (availability != null || "@ViewBag.Page" == "Availability")
        {

            $('#calendar1').fullCalendar({

                header: {
                    left: '',
                    center: '',
                    right: ''
                },
                allDaySlot: false,
                buttonText: {
                    today: 'today',
                    month: 'month',
                    week: 'week',
                    day: 'day'
                },
                contentHeight: 'auto',
                //scrollTime:"00:00:00",
                //minTime: startslot,
                //maxTime:endslot,
                //views: {
                //    settimana: {
                //        type: 'agendaWeek',
                //        duration: {
                //            days: 7
                //        },
                //        title: 'Apertura',
                //        columnFormat: 'dddd', // Format the day to only show like 'Monday'
                //        hiddenDays: [], // Hide Sunday and Saturday?
                //    }
                //},
                //minTime: "09:00:00",
                //maxTime: "17:00:00",
                //firstHour:9,
                //businessHours: { start: '09:00', end: '17:00' },
                defaultView: 'agendaWeek',
                columnFormat: 'dddd',
                timeFormat: 'H(:mm)',
                slotEventOverlap:false,
                events:@Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.availability)),
                //events: [{
                //    title: "",
                //    dow: [1], //monday
                //    rendering: 'background',
                //    start: '4:00',
                //    end: '5:00'
                //    //start/endtime works to
                //}],
                eventClick: function(calEvent, jsEvent, view) {
                    //console.log(calEvent)
                    //alert(calEvent);

                    showMask();
                    //alert('Clicked on: ' + new Date(date.format()).getDay());
                    //alert('Hours on: ' + new Date(date.format()).getHours());
                    //Half-Hour slot : url: '@Url.Action("insert","appointments")'+"?day="+calEvent.start.day()+"&hour="+calEvent.start.hour()+"&minute="+calEvent.start.minute()+"&timezoneoffset="+ encodeURIComponent(getTimeZone()),
                    $.ajax({
                        url: '@Url.Action("insert","appointments")'+"?day="+calEvent.start.day()+"&hour="+calEvent.start.hour()+"&timezoneoffset="+ encodeURIComponent(getTimeZone()),
                        //data: JSON.stringify(messages),
                        type: 'post',
                        dataType: 'json',
                        contentType: "application/json; charset=utf-8",
                        success: function (data) {
                            if(data!=null)
                            {
                                console.log(data);
                                if(data.result !="" && data.appointments==null)
                                {
                                    window.location.reload();
                                }
                                if(data.result !="" && data.appointments !=null && data.appointments.length >0)
                                {
                                    var rowdata=[];
                                    for(var i=0;i<data.appointments.length;i++)
                                    {
                                        rowdata.push(new Array('@Context.Session.GetString("UserName")', data.appointments[i].patient.patientName,moment(data.appointments[i].datetime).format("YYYY-MM-DD hh A"),data.appointments[i].callStatus));

                                    }
                                    console.log(rowdata);
                                    //alert();
                                    $("#divpopup2").show();
                                    $("#mask2").show();
                                    $("#messageid").text("You have following Appointment booked by Patients For "+ moment(new Date(calEvent.start.format())).format("dddd hh A"));
                                    $("#messagebottom").text("Making " + moment(new Date(calEvent.start.format())).format("dddd hh A")+ " unavailable will cancel these appointments  Do you want to cancel all these appointments?");
                                    $("#hdday").val(new Date(calEvent.start.format()).getDay());
                                    $("#hdhour").val(new Date(calEvent.start.format()).getHours());
                                    $("#hdminute").val(new Date(calEvent.start.format()).getMinutes());
                                    $("#hdoffset").val(getTimeZone());

                                    $('#example1').dataTable({
                                        "data": rowdata,
                                        "stateSave": true,
                                        "stateDuration": -1,
                                        "columns": [
                                            { "title": "Name" },
                                            { "title": "Patient Name" },
                                            { "title": "Date" },
                                            { "title": "Status" }
                                        ]
                                    })
                                }
                            }
                        },
                        error: function (data) {
                            //console.log(data);
                        }
                    });
                },
                dayClick: function(date, jsEvent, view) {
                    showMask();
                    //alert('Clicked on: ' + moment(date).format("YYYY-MM-DD HH:mm:ss"));
                    //alert('Hour on: ' + new Date(date.format()).getHours());
                    //alert('Minutes on: ' + new Date(date.format()).getMinutes());
                    //Half-Hour slot : url: '@Url.Action("insert","appointments")'+"?day="+new Date(date.format()).getDay()+"&hour="+new Date(date.format()).getHours()+"&minute="+new Date(date.format()).getMinutes()+"&timezoneoffset="+ encodeURIComponent(getTimeZone()),
                    $.ajax({
                        url: '@Url.Action("insert","appointments")'+"?day="+new Date(date.format()).getDay()+"&hour="+new Date(date.format()).getHours()+"&timezoneoffset="+ encodeURIComponent(getTimeZone()),
                        //data: JSON.stringify(messages),
                        type: 'post',
                        dataType: 'json',
                        contentType: "application/json; charset=utf-8",
                        success: function (data) {
                            if(data!=null)
                            {
                                console.log(data);
                                if(data.result !="" && data.appointments==null)
                                {
                                    window.location.reload();
                                }
                                if(data.result !="" && data.appointments !=null && data.appointments.length >0)
                                {
                                    var rowdata=[];
                                    for(var i=0;i<data.appointments.length;i++)
                                    {
                                        rowdata.push(new Array('@Context.Session.GetString("UserName")', data.appointments[i].patient.patientName,moment(data.appointments[i].datetime).format("YYYY-MM-DD hh A"),data.appointments[i].callStatus));
                                    }
                                    console.log(rowdata);
                                    $("#divpopup2").show();
                                    $("#mask2").show();
                                    $("#messageid").text("You have following Appointment booked by Patients For "+ moment(new Date(date.format())).format("dddd hh A"));
                                    $("#messagebottom").text("Making " + moment(new Date(date.format())).format("dddd hh A")+ " unavailable will cancel these appointments  Do you want to cancel all these appointments?");
                                    $("#hdday").val(new Date(date.format()).getDay());
                                    $("#hdhour").val(new Date(date.format()).getHours());
                                    $("#hdminute").val(new Date(calEvent.start.format()).getMinutes());
                                    $("#hdoffset").val(getTimeZone());

                                    $('#example1').dataTable({
                                        "data": rowdata,
                                        "stateSave": true,
                                        "stateDuration": -1,
                                        "columns": [
                                            { "title": "Name" },
                                            { "title": "Patient Name" },
                                            { "title": "Date" },
                                            { "title": "Status" }
                                        ]
                                    })
                                }
                            }
                        },
                        error: function (data) {
                            //console.log(data);
                        }
                    });
                    //alert('Coordinates: ' + jsEvent.pageX + ',' + jsEvent.pageY);

                    //alert('Current view: ' + view.name);

                    //// change the day's background color just for fun
                    //$(this).css('background-color', 'red');

                },
                //Random default events
                //events: [
                //  {
                //      title: 'All Day Event',
                //      start: new Date(y, m, 1),
                //      backgroundColor: '#f56954', //red
                //      borderColor: '#f56954' //red
                //  },
                //  {
                //      title: 'Long Event',
                //      start: new Date(y, m, d - 5),
                //      end: new Date(y, m, d - 2),
                //      backgroundColor: '#f39c12', //yellow
                //      borderColor: '#f39c12' //yellow
                //  },
                //  {
                //      title: 'Meeting',
                //      start: new Date(y, m, d, 10, 30),
                //      allDay: false,
                //      backgroundColor: '#0073b7', //Blue
                //      borderColor: '#0073b7' //Blue
                //  },
                //  {
                //      title: 'Lunch',
                //      start: new Date(y, m, d, 12, 0),
                //      end: new Date(y, m, d, 14, 0),
                //      allDay: false,
                //      backgroundColor: '#00c0ef', //Info (aqua)
                //      borderColor: '#00c0ef' //Info (aqua)
                //  },
                //  {
                //      title: 'Birthday Party',
                //      start: new Date(y, m, d + 1, 19, 0),
                //      end: new Date(y, m, d + 1, 22, 30),
                //      allDay: false,
                //      backgroundColor: '#00a65a', //Success (green)
                //      borderColor: '#00a65a' //Success (green)
                //  },
                //  {
                //      title: 'Click for Google',
                //      start: new Date(y, m, 28),
                //      end: new Date(y, m, 29),
                //      url: 'http://google.com/',
                //      backgroundColor: '#3c8dbc', //Primary (light-blue)
                //      borderColor: '#3c8dbc' //Primary (light-blue)
                //  }
                //],
                eventDurationEditable: false,
                editable: false,
                droppable: false, // this allows things to be dropped onto the calendar !!!

            })
        }
        else if (appointment != null || "@ViewBag.Page" == "Calendar")
        {
            console.log(@Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.appointment)));
            var endDate=moment().add(60, 'days');


            $('#calendar').fullCalendar({
                firstDay:d.getDay(),
                header: {
                    left: 'prev,next today',
                    center: 'title',
                    right: ''
                },
                //minTime:startslot,
                //maxTime:endslot,
                //height:400,
                contentHeight: 'auto',
                scrollTime: '10:00:00',
                //hiddenDays: [6,0],
                buttonText: {
                    today: 'today',
                    month: 'month',
                    week: 'week',
                    day: 'day'
                },

                viewRender: function(currentView){
                    var minDate = moment();
                    // Past
                    if ((minDate >= currentView.start && minDate <= currentView.end)) {
                        $(".fc-prev-button").prop('disabled', true);
                        $(".fc-prev-button").addClass('fc-state-disabled');
                    }
                    else {
                        $(".fc-prev-button").removeClass('fc-state-disabled');
                        $(".fc-prev-button").prop('disabled', false);
                    }

                    if ((currentView.end >=endDate)) {
                        $(".fc-next-button").prop('disabled', true);
                        $(".fc-next-button").addClass('fc-state-disabled');
                    }
                    else
                    {

                        $(".fc-next-button").removeClass('fc-state-disabled');
                        $(".fc-next-button").prop('disabled', false);
                    }

                },
                dayClick: function(date, jsEvent, view) {
                    showMask();
                    //alert('Clicked on: ' + moment(date).format("YYYY-MM-DD HH:mm:ss"));
                    //alert('Hours on: ' + new Date(date.format()).getHours());

                    $.ajax({
                        url: '@Url.Action("insertschedule","appointments")'+"?date="+moment(date).format("YYYY-MM-DD HH:mm:ss")+"&timezoneoffset="+ encodeURIComponent(getTimeZone())+"&color=white",
                        //data: JSON.stringify(messages),
                        type: 'post',
                        dataType: 'json',
                        contentType: "application/json; charset=utf-8",
                        success: function (data) {
                            if(data!=null)
                            {
                                console.log(data);
                                if(data.result !="" && data.appointments==null)
                                {
                                    window.location.reload();
                                }
                            }
                        },
                        error: function (data) {
                            //console.log(data);
                        }
                    });
                },
                eventClick: function(calEvent, jsEvent, view) {
                    console.log(calEvent);
                    if(calEvent.backgroundColor=="green" ||calEvent.backgroundColor=="grey")
                    {
                        //alert(calEvent.start);
                        showMask();
                        //alert('Clicked on: ' + new Date(date.format()).getDay());
                        //alert('Hours on: ' + new Date(date.format()).getHours());

                        $.ajax({
                            url: '@Url.Action("insertschedule","appointments")'+"?date="+moment(calEvent.start._i).format("YYYY-MM-DD HH:mm:ss")+"&timezoneoffset="+ encodeURIComponent(getTimeZone())+"&color="+calEvent.backgroundColor,
                            //data: JSON.stringify(messages),
                            type: 'post',
                            dataType: 'json',
                            contentType: "application/json; charset=utf-8",
                            success: function (data) {
                                if(data!=null)
                                {
                                    console.log(data);
                                    if(data.result !="" && data.appointments==null)
                                    {
                                        window.location.reload();
                                    }
                                }
                            },
                            error: function (data) {
                                //console.log(data);
                            }
                        });
                    }
                    else if(calEvent.backgroundColor=="red")
                    {
                        $.ajax({
                            url: '@Url.Action("generateuri", "appointments")'+"?id="+calEvent.appointmentid,
                            //data: JSON.stringify(messages),
                            type: 'get',
                            dataType: 'json',
                            contentType: "application/json; charset=utf-8",
                            success: function (data) {
                                if(data!=null)
                                {
                                    console.log(data);
                                    if(data.result =="success" && data.url !="")
                                    {
                                        $("#vseeurl").attr("href",data.url);
                                        $("#vseeurl")[0].click();
                                        //window.location.reload();
                                    }
                                }
                            },
                            error: function (data) {
                                //console.log(data);
                            }
                        });
                    }
                },

                //height:585,
                allDaySlot: false,
                defaultView: 'agendaWeek',

                //columnFormat: 'dddd',
                //timeFormat: 'H(:mm)',
                slotEventOverlap:false,
                events:@Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.appointment)),
                //events: [{
                //    title: "",
                //    dow: [1], //monday
                //    rendering: 'background',
                //    start: '4:00',
                //    end: '5:00'
                //    //start/endtime works to
                //}],

                //Random default events
                //events: [
                //  {
                //      title: 'All Day Event',
                //      start: new Date(y, m, 1),
                //      backgroundColor: '#f56954', //red
                //      borderColor: '#f56954' //red
                //  },
                //  {
                //      title: 'Long Event',
                //      start: new Date(y, m, d - 5),
                //      end: new Date(y, m, d - 2),
                //      backgroundColor: '#f39c12', //yellow
                //      borderColor: '#f39c12' //yellow
                //  },
                //  {
                //      title: 'Meeting',
                //      start: new Date(y, m, d, 10, 30),
                //      allDay: false,
                //      backgroundColor: '#0073b7', //Blue
                //      borderColor: '#0073b7' //Blue
                //  },
                //  {
                //      title: 'Lunch',
                //      start: new Date(y, m, d, 12, 0),
                //      end: new Date(y, m, d, 14, 0),
                //      allDay: false,
                //      backgroundColor: '#00c0ef', //Info (aqua)
                //      borderColor: '#00c0ef' //Info (aqua)
                //  },
                //  {
                //      title: 'Birthday Party',
                //      start: new Date(y, m, d + 1, 19, 0),
                //      end: new Date(y, m, d + 1, 22, 30),
                //      allDay: false,
                //      backgroundColor: '#00a65a', //Success (green)
                //      borderColor: '#00a65a' //Success (green)
                //  },
                //  {
                //      title: 'Click for Google',
                //      start: new Date(y, m, 28),
                //      end: new Date(y, m, 29),
                //      url: 'http://google.com/',
                //      backgroundColor: '#3c8dbc', //Primary (light-blue)
                //      borderColor: '#3c8dbc' //Primary (light-blue)
                //  }
                //],
                eventDurationEditable: false,
                editable: false,
                droppable: false, // this allows things to be dropped onto the calendar !!!

            })
        }
        else
        {
            $('#example1').dataTable({
                "language": {
                    "emptyTable": "No appointments requested"
                },
                "stateSave": true,
                "stateDuration": -1,
                'aoColumnDefs': [{
                    'bSortable': false,
                    'aTargets': [-1] /* 1st one, start by the right */
                }]
            });
            //        .on('order.dt', function () {
            //        //console.log('Order');
            //        vseePresence = new VSeePresence();
            //        $('.status-alert').vsee('presenceClasses');
            //        $('.when-not-offline').vsee('showByPresence');
            //    })
            //.on('search.dt', function () {
            //    //console.log('Search');
            //    vseePresence = new VSeePresence();
            //    $('.status-alert').vsee('presenceClasses');
            //    $('.when-not-offline').vsee('showByPresence');
            //})
            //.on('page.dt', function () {
            //    //console.log('Page');
            //    vseePresence = new VSeePresence();
            //    $('.status-alert').vsee('presenceClasses');
            //    $('.when-not-offline').vsee('showByPresence');
            //});
            // Initialize the VSee environment
            //vseePresence = new VSeePresence();


            //$('.status-alert').vsee('presenceClasses');

            //$('.when-not-offline').vsee('showByPresence');

            //$('[id^=startcall]').on('click', function () {
            //    $(window).unbind('beforeunload');
            //});
        }

    })
</script>
